var m=Object.defineProperty;var C=(i,e,t)=>e in i?m(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var d=(i,e,t)=>(C(i,typeof e!="symbol"?e+"":e,t),t);import"./modulepreload-polyfill-ec808ebb.js";import{P as g}from"./pg-event-f7ab3da9.js";class f{constructor(e,t){d(this,"ENTRANCE_CODE","E");d(this,"EXIT_CODE","X");d(this,"WALL_CODE","P");d(this,"PATH_CODE","C");this.rows=e,this.cols=t,this.maze=[],this.setEmptyMaze()}setEmptyMaze(){this.maze=[];for(let e=0;e<this.rows;e++){let t=[];for(let s=0;s<this.cols;s++)e===0||e===this.rows-1||s===0||s===this.cols-1?t.push(this.WALL_CODE):t.push(this.PATH_CODE);this.maze.push(t)}return this.maze}getAllOptions(){return[this.WALL_CODE,this.PATH_CODE,this.ENTRANCE_CODE,this.EXIT_CODE]}getAvailableOptionsFor(e,t){let s=[];return e===0||e===this.rows-1||t===0||t===this.cols-1?(s.push(this.WALL_CODE),(e===0||e===this.rows-1)&&(t===0||t===this.cols-1)||(this.findPosition(this.ENTRANCE_CODE)||s.push(this.ENTRANCE_CODE),this.findPosition(this.EXIT_CODE)||s.push(this.EXIT_CODE)),s):(s.push(this.PATH_CODE),s.push(this.WALL_CODE),s)}setCellValue(e,t,s){if(!this.getAvailableOptionsFor(e,t).includes(s))throw new Error(`Invalid value for cell (${e}, ${t}): ${s}`);this.maze[e][t]=s}setMaze(e){if(e.length!==this.rows||e[0].length!==this.cols)throw new Error("Invalid maze dimensions.");return this.maze=e,this.maze}findPosition(e){for(let t=0;t<this.rows;t++)for(let s=0;s<this.cols;s++)if(this.maze[t][s]===e)return{row:t,col:s};return null}dfs(e,t,s){if(this.maze[e][t]===this.EXIT_CODE)return!0;s[e][t]=!0;let n=[[-1,0],[1,0],[0,-1],[0,1]];for(let[l,r]of n){let a=e+l,o=t+r;if(a>=0&&a<this.rows&&o>=0&&o<this.cols&&!s[a][o]&&this.maze[a][o]!==this.WALL_CODE&&this.dfs(a,o,s))return!0}return!1}isSolvable(){let e=this.findPosition(this.ENTRANCE_CODE);if(!e)throw new Error("Maze has no entrance.");let t=new Array(this.rows).fill(!1).map(()=>new Array(this.cols).fill(!1));return this.dfs(e.row,e.col,t)}}class O{constructor(e){this.engine=e,this.onChange=()=>{}}render(){let e=document.getElementById("opcionesLaberinto");e.innerHTML="";for(let[t,s]of this.engine.maze.entries()){let n=document.createElement("DIV");n.classList.add("fila-opciones");for(let[l,r]of s.entries()){let a=document.createElement("DIV");a.classList.add("celda-opciones");let o=document.createElement("SELECT");o.addEventListener("change",c=>{this.updateCell(t,l,c),this.updateAllCellsOptions(),this.onChange()});let u=this.engine.getAllOptions(),p=this.engine.getAvailableOptionsFor(t,l);for(let c of u){let P=document.createElement("OPTION");P.innerHTML=c,P.value=c,p.includes(c)||P.setAttribute("disabled","true"),o.appendChild(P)}o.value=r,a.appendChild(o),n.appendChild(a)}e.appendChild(n)}}updateCell(e,t,s){let n=s.target.value;this.engine.setCellValue(e,t,n)}updateAllCellsOptions(){let e=document.querySelectorAll("#opcionesLaberinto select");for(let[t,s]of e.entries()){let n=Math.floor(t/this.engine.cols),l=t%this.engine.cols,r=this.engine.getAvailableOptionsFor(n,l);for(let a of r){let o=s.querySelector(`option[value="${a}"]`);o&&o.removeAttribute("disabled")}}}}class A{constructor(e){this.engine=e}transpile(){let e="";for(let t of this.engine.maze)for(let s of t){let n;switch(s){case this.engine.WALL_CODE:n="pared";break;case this.engine.PATH_CODE:n="camino";break;case this.engine.ENTRANCE_CODE:n="entrada";break;case this.engine.EXIT_CODE:n="salida";break}e+=`<div class='${n}'></div>
`}return e}}const h=i=>{let e=document.getElementById("codigoGenerado");e.innerText=i,hljs.highlightBlock(e)},w=()=>{let i=document.getElementById("codigoGenerado"),e=document.createRange();e.selectNode(i),window.getSelection().removeAllRanges(),window.getSelection().addRange(e);let t=window.getSelection().toString();navigator.clipboard.writeText(t),window.getSelection().removeAllRanges()},E=i=>{let e=0,t=0,s=0,n=0;for(let l of i.maze)for(let r of l)switch(r){case i.WALL_CODE:e++;break;case i.PATH_CODE:t++;break;case i.ENTRANCE_CODE:s++;break;case i.EXIT_CODE:n++;break}document.getElementById("rp").innerText=e,document.getElementById("rc").innerText=t,document.getElementById("re").innerText=s,document.getElementById("rs").innerText=n},T=(i,e)=>{const t=i.isSolvable();return t?e.postToPg({event:"SUCCESS",message:"¡Haz completado y guardado el laberinto!",reasons:[],state:JSON.stringify({})}):e.postToPg({event:"FAILURE",message:"Mmm... parece que tu laberinto no tiene solución.",reasons:[],state:JSON.stringify({})}),document.getElementById("notaDeGuardado").style.display="none",t},b=()=>{const t=[["P","E","P","P","P","P","P","P","P","P"],["P","C","P","P","P","P","P","P","P","P"],["P","C","C","P","P","P","P","P","P","P"],["P","P","P","P","P","P","P","P","P","P"],["P","P","P","P","P","P","P","P","P","P"],["P","P","P","P","P","P","P","P","P","P"],["P","P","P","P","P","P","P","P","P","P"],["P","P","P","P","P","P","P","P","P","P"],["P","P","P","P","P","P","P","P","P","P"],["P","P","P","P","P","P","P","X","P","P"]],s=new g;let n=!1;const l=new f(10,10),r=new O(l),a=new A(l);l.setMaze(t),r.render(),h(a.transpile()),E(l),document.getElementById("copiarCodigoBTN").addEventListener("click",w),document.getElementById("guardarCodigoBTN").addEventListener("click",()=>{n=T(l,s)}),r.onChange=()=>{h(a.transpile()),E(l),document.getElementById("notaDeGuardado").style.display="block";const o=l.isSolvable();if(n&&!o){s.postToPg({event:"FAILURE",message:"¡Ups! Parece que has cambiado el laberinto después de haberlo completado.",reasons:[],state:JSON.stringify({})}),n=!1;return}o&&!n&&(s.postToPg({event:"SUCCESS",message:"¡Haz completado el laberinto! Recuerda que, si haces nuevos cambios, deberás guardarlos manualmente.",reasons:[],state:JSON.stringify({})}),n=!0)}};b();
