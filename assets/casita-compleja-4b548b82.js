class g{constructor(e,t){this.expectedWord=e,this.availableChars=t}binaryStringToChar(e){const t=parseInt(e,2);return this.availableChars[t]!==void 0?this.availableChars[t]:"_"}getBitsNeeded(){return Math.ceil(Math.log2(this.availableChars.length))}binaryStringToWord(e){const t=this.getBitsNeeded(),r=[];for(let s=0;s<e.length;s+=t){const n=e.slice(s,s+t);r.push(this.binaryStringToChar(n))}return r.join("")}wordToBinaryString(e){const t=this.getBitsNeeded(),r=[];for(const s of e){const n=s,a=this.availableChars.indexOf(n).toString(2).padStart(t,"0");r.push(a)}return r.join("")}getBinaryStringFromSelects(e){const t=e.querySelectorAll(".binary-select__select"),r=this.getBitsNeeded(),s=[];for(let n=0;n<t.length;n+=r){const i=[];for(let a=0;a<r;a++)i.push(t[n+a].value);s.push(i)}return s}updatePreview(e,t){const r=t.flat().join(""),s=this.binaryStringToWord(r);e.innerHTML=s}generateBinarySelects(e,t){this.expectedWord.split("").map(s=>{const n=document.createElement("div");n.classList.add("binary-select__char");const i=this.getBitsNeeded();for(let a=0;a<i;a++){const c=document.createElement("select");c.classList.add("binary-select__select"),["0","1"].forEach(l=>{const o=document.createElement("option");o.value=l,o.text=l,c.appendChild(o)}),c.addEventListener("change",l=>{this.toggleSelect(c),t(this.getBinaryStringFromSelects(e))}),n.appendChild(c)}e.appendChild(n)})}toggleSelect(e){e.value==="1"?e.classList.add("binary-select__select--selected"):e.classList.remove("binary-select__select--selected")}setBinarySelects(e,t){const r=e.querySelectorAll(".binary-select__select");for(let s=0;s<t.length;s++){const n=t[s];for(let i=0;i<n.length;i++)r[s*n.length+i].value=n[i]}r.forEach(s=>{this.toggleSelect(s)})}}export{g as C};
